name: Backend CI

on:
  push:
    paths:
      - 'app/**'
      - 'tests/**'
      - 'poetry.lock'
      - 'pyproject.toml'
  pull_request:
    paths:
      - 'app/**'
      - 'tests/**'
      - 'poetry.lock'
      - 'pyproject.toml'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.4.0
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV
        echo "TESTING=true" >> $GITHUB_ENV
        echo "DISABLE_RATE_LIMITING=true" >> $GITHUB_ENV
    
    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-ansi
    
    - name: Run tests with coverage
      run: |
        poetry run pytest -v --cov=app --cov-report=term
