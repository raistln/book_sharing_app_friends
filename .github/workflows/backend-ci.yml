name: Backend CI

on:
  push:
    paths:
      - 'app/**'
      - 'tests/**'
      - 'poetry.lock'
      - 'pyproject.toml'
  pull_request:
    paths:
      - 'app/**'
      - 'tests/**'
      - 'poetry.lock'
      - 'pyproject.toml'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        # Dependencias actualizadas para Ubuntu 24.04 (Noble Numbat)
        sudo apt-get install -y libgl1 libglib2.0-0 tesseract-ocr
        # Instalar dependencias de compilaci√≥n para paquetes Python
        sudo apt-get install -y build-essential python3-dev
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.0
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install --no-interaction --no-ansi --with dev
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379/0
        TESTING: "true"
        DISABLE_RATE_LIMITING: "true"
      run: |
        poetry run pytest -v --cov=app --cov-report=term
